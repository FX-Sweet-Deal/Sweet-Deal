plugins {
	id 'java'
	id 'org.springframework.boot'
	id 'io.spring.dependency-management'
}


group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.6")
}


dependencies {
	// --- Spring Cloud Gateway (WebFlux 기반)

	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'

	// --- Eureka Client (서비스 디스커버리)
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// --- Actuator (헬스체크/모니터링)
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// --- Swagger (springdoc, WebFlux 전용 UI)// webflux 기반 gateway
	implementation "org.springdoc:springdoc-openapi-starter-webflux-ui:2.5.0"

	// --- Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// --- (옵션) yml 바인딩 메타 생성 시 편리
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// --- 내부 공통 모듈 (Web/JPA/JDBC 충돌 제외)
	implementation(project(":global")) {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-web'
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-data-jpa'
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-jdbc'
		exclude group: 'mysql', module: 'mysql-connector-j'
	}

	// --- 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}


tasks.named('test') {
	useJUnitPlatform()
}