server:
  port: 0

spring:
  application:
    name: orders # ?? ? ??? service?? ??? ??
  datasource:
    url: jdbc:mysql://localhost:3306/orders
      ?serverTimezone=Asia/Seoul
      &characterEncoding=UTF-8
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
    open-in-view: false

  kafka:
      bootstrap-servers: localhost:9092
      producer:
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      consumer:
        group-id: ${spring.application.name}-group


  cloud:
    openfeign:
      client:
        config:
          default:
            connect-timeout: 5000
            read-timeout: 5000

eureka:
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${random.int}

  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://admin:1234@localhost:8761/eureka


logging:
  level:
    root: INFO
    com.example: INFO


openapi:
  service:
    # 예: user 모듈
    url: http://localhost:8080/user
    # 운영: https://api.example.com/user-service


